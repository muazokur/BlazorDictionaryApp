@inherits LayoutComponentBase


<div class="navbar fixed-top text-white" style="background-color:#2d2d2d; width:82%">
    <div class="logo">
        <a href="/" class="bg-white">
            @*<img height="29" src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Ek%C5%9Fi_S%C3%B6zl%C3%BCk_yeni_logo.svg/2560px-Ek%C5%9Fi_S%C3%B6zl%C3%BCk_yeni_logo.svg.png" />*@  
            <img height="29" src="../blazor_dictionary_logo.png" />
        </a>
    </div>

    <div class="search-box">
        <div class="input-group">
            <div class="form-outline">
                <input type="search"
                       class="form-control small"
                       @bind-value="@searchText"
                       @bind-value:event="oninput"
                       @onkeypress="@SearchKeyDown"
                       @onfocusout="@OnSearchFocusOut"
                       placeholder="Search in Sozluk" />
            </div>

            <button type="button" class="btn btn-sozluk btn-success"
                    @onclick="@Search"
                    @onfocusout="@OnSearchFocusOut">
                <i class="fa fa-search h-75"></i>
            </button>

        </div>

        @if (showSearchResult)
        {
            <ul class="list-group">

                @foreach (var searchItem in searchResult)
                {
                    <li class="list-group-item list-group-item-action d-flex justify-content-between align-items-center border-0">

                        <a @onclick="(async () => await GoEntry(searchItem.Id))">
                            @searchItem.Subject
                        </a>

                    </li>
                }


            </ul>

        }

    </div>

    <AuthorizeView>
        <Authorized>
            <div class="top-nav">
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="Create Entry" @onclick="@NavigateCreateEntryPage" />
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="Me" @onclick="@NavigateMePage" />
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="Logout" @onclick="@NavigateLogoutPage" />
            </div>
        </Authorized>

        <NotAuthorized>

            <div class="top-nav">
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="Login" @onclick="@NavigateLoginPage" />
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="Sing in" @onclick="@NavigateSigninPage" />

            </div>

        </NotAuthorized>


    </AuthorizeView>

    <div class="sub-nav">
        <a @onclick="@(e=>RefreshEntries(""))" class="sub-nav-item active">bugün</a>
        <a @onclick="@(e=>RefreshEntries("gündem"))" class="sub-nav-item">gündem</a>
        <a @onclick="@(e=>RefreshEntries("bilgisayar"))" class="sub-nav-item">bilgisayar</a>
        <a @onclick="@(e=>RefreshEntries("elektrik"))" class="sub-nav-item">elektrik</a>
        <a @onclick="@(e=>RefreshEntries("makine"))" class="sub-nav-item">makine</a>
        <a @onclick="@(e=>RefreshEntries("inşaat"))" class="sub-nav-item">inşaat</a>
        <a @onclick="@(e=>RefreshEntries("mekatronik"))" class="sub-nav-item">mekatronik</a>
        <a @onclick="@(e=>RefreshEntries("gıda"))" class="sub-nav-item">gıda</a>

    </div>


</div>



<div class="page">
    <div class="sidebar">
        <h5 class="text-white text-center siderbar-heading">@Category</h5>
        @*<a class="more-data" @onclick="@RefreshEntries">refresh</a>*@

        <ul class="list-group">
            <EntriesComponent @ref="@entriesComponent" 
                              Category="@Category"
                              />
        </ul>

    </div>

    <main>
        <article class="content px-4">
            <br />
            @Body
        </article>
    </main>
</div>


@code{
    public string Category { get; set; } = "gündem";
    private EntriesComponent entriesComponent;
    private string searchText;
    private bool showSearchResult;
    private List<SearchEntryViewModel> searchResult = new List<SearchEntryViewModel>();

    [Inject]
    NavigationManager navigationManager { get; set; }
    [Inject]
    IEntryService entryService { get; set; }



    private async Task RefreshEntries(string category)
    {
        Category = category;
        await entriesComponent.RefreshList(category);
    }

    private void NavigateMePage()
    {
        navigationManager.NavigateTo("/me");
    }
    private void NavigateLoginPage()
    {
        navigationManager.NavigateTo("/login");
    }
    private void NavigateSigninPage()
    {
        navigationManager.NavigateTo("/signin");
    }
    private void NavigateLogoutPage()
    {
        navigationManager.NavigateTo("/logout");
    }
    private void NavigateCreateEntryPage()
    {
        navigationManager.NavigateTo("/createentry");
    }
    private async Task SearchKeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await Search();
        }
    }

    private async Task OnSearchFocusOut()
    {
        await Task.Delay(100);
        if (showSearchResult)
            showSearchResult = false;
    }

    private async Task Search()
    {
        if (string.IsNullOrEmpty(searchText))
            return;

        searchResult = await entryService.SearchBySubject(searchText);

        showSearchResult = true;

        searchText = string.Empty;
    }

    private async Task GoEntry(Guid entryId)
    {
        await OnSearchFocusOut();
        navigationManager.NavigateTo($"/entry/{entryId}");
    }




}